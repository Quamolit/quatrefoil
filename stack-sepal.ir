{:definitions {"core/render-canvas!" ["defn" "render-canvas!" ["markup" "states-ref" "instants" "scene"] ["let" [["build-mutate" ["fn" ["coord" "new-state"] ["println" "|Mutate states:" "new-state"] ["swap!" "states-ref" "assoc-in" ["conj" "coord" "'data"] "new-state"]]] ["new-tree" ["render-component" "markup" "@tree-ref" ["[]"] ["get" "@states-ref" [":name" "markup"]] "build-mutate" "instants"]]] ["if" ["some?" "@tree-ref"] ["let" [["changes-ref" ["atom" ["[]"]]] ["collect!" ["fn" ["x"] ["swap!" "changes-ref" "conj" "x"]]]] ["diff-tree" "@tree-ref" "new-tree" ["[]"] "collect!"] [".log" "js/console" "|Changes:" "@changes-ref"]] ["build-tree" ["[]"] ["purify-tree" "new-tree"]]] ["reset!" "tree-ref" "new-tree"] [".log" "js/console" "|Tree:" "new-tree"]]], "main/dispatch!" ["defn" "dispatch!" ["op" "op-data"] ["let" [["store" ["updater" "@store-ref" "op" "op-data"]]] [".log" "js/console" "|Dispatch:" "op" "op-data" "store"] ["reset!" "store-ref" "store"]]], "dsl.alias/sphere" ["defn" "sphere" ["props" "&" "children"] ["create-element" ":sphere" "props" "children"]], "dsl.render/render-component" ["defn" "render-component" ["markup" "prev-tree" "coord" "states" "build-mutate" "instants"] ["--" ".log" "js/console" "|Component states:" "states"] ["if" ["and" ["some?" "prev-tree"] ["let" [["prev-args" [":args" "prev-tree"]] ["prev-states" [":states" "prev-tree"]] ["prev-instants" [":instants" "prev-tree"]]] ["--" "println" ["=seq?" [":args" "markup"] "prev-args"] ["identical?" "states" "prev-states"] ["identical?" "instants" "prev-instants"]] ["and" ["=seq?" [":args" "markup"] "prev-args"] ["identical?" "states" "prev-states"] ["identical?" "instants" "prev-instants"]]]] ["do" [".log" "js/console" "|Reusing component:" "coord"] "prev-tree"] ["let" [["comp-name" [":name" "markup"]] ["base-coord" ["conj" "coord" "comp-name"]] ["hooks" [":hooks" "markup"]] ["state" ["if" ["contains?" "states" "'data"] ["get" "states" "'data"] ["let" [["init-state" [":init-state" "hooks"]]] ["apply" "init-state" [":args" "markup"]]]]] ["update-state" [":update-state" "hooks"]] ["mutate!" ["fn" ["&" "args"] ["let" [["new-state" ["apply" "update-state" ["cons" "state" "args"]]]] [".log" "js/console" "|During mutate:" "base-coord" "state" "new-state" "states"] ["build-mutate" "base-coord" "new-state"]]]] ["instant" ["get" "instants" "comp-name"]] ["tree" ["->" [":render" "markup"] ["apply" [":args" "markup"]] ["apply" ["list" "state" "mutate!" ["get" "instants" "'data"]]] ["render-markup" [":tree" "prev-tree"] "base-coord" "base-coord" "states" "build-mutate" "instant"]]]] [".log" "js/console" "|Creating new component:" "coord"] ["merge" "markup" ["{}" [":tree" "tree"] [":states" "states"] [":instants" "instants"]]]]]], "dsl.render/render-shape" ["defn" "render-shape" ["markup" "prev-markup" "coord" "comp-coord" "states" "build-mutate" "instants"] ["let" [["prev-children" [":children" "prev-markup"]]] ["--" ".log" "js/console" "|Shape:" "markup"] ["->" "markup" ["assoc" ":coord" "coord"] ["update" ":children" ["fn" ["children"] ["->>" "children" ["map" ["fn" ["entry"] ["update" "entry" "1" ["fn" ["child"] ["let" [["k" ["first" "entry"]]] ["render-markup" "child" ["get" "prev-children" "k"] ["conj" "coord" "k"] "comp-coord" ["get" "states" "k"] "build-mutate" ["get" "instants" "k"]]]]]]] ["into" ["{}"]]]]]]]], "dsl.alias/group" ["defn" "group" ["props" "&" "children"] ["create-element" ":group" "props" "children"]], "main/-main!" ["defn" "-main!" [] ["enable-console-print!"] ["devtools/install!"] ["if" ["not" ["empty?" "ssr-stages"]] ["let" [["target" [".querySelector" "js/document" "|#app"]]] ["falsify-stage!" "target" ["render-element" ["comp-container" "@store-ref" "ssr-stages"] "states-ref"] "dispatch!"]]] ["render-app!"] ["let" [["canvas-el" ["js/document.querySelector" "|canvas"]]] ["reset!" "renderer-ref" ["js/THREE.WebGLRenderer." ["clj->js" ["{}" [":canvas" "canvas-el"] [":antialias" "true"]]]]] [".addEventListener" "canvas-el" "|click" ["fn" ["event"] ["on-canvas-click" "event" "dispatch!" "tree-ref"]]]] [".setSize" "@renderer-ref" "js/window.innerWidth" "js/window.innerHeight"] ["render-canvas-app!"] ["add-watch" "store-ref" ":changes" "render-canvas-app!"] ["add-watch" "states-ref" ":changes" "render-canvas-app!"] ["println" "|App started!"]], "dsl.object3d-dom/camera-ref" ["defonce" "camera-ref" ["atom" "nil"]], "dsl.alias/point-light" ["defn" "point-light" ["props" "&" "children"] ["create-element" ":point-light" "props" "children"]], "main/on-jsload!" ["defn" "on-jsload!" [] ["render-canvas-app!"] ["println" "|Code updated."]], "comp.canvas/comp-canvas" ["def" "comp-canvas" ["create-comp" ":canvas" ["{}"] ["fn" ["store"] ["fn" ["state" "mutate!" "instant"] ["scene" ["{}"] ["comp-demo"] ["comp-todolist" [":tasks" "store"]] ["point-light" ["{}" [":params" ["{}" [":color" "0xffaaaa"] [":x" "0"] [":y" "40"] [":z" "60"] [":intensity" "2"] [":distance" "400"]]]]] ["perspective-camera" ["{}" [":params" ["{}" [":x" "0"] [":y" "0"] [":z" "200"] [":fov" "45"] [":aspect" ["/" "js/window.innerWidth" "js/window.innerHeight"]] [":near" "0.1"] [":far" "1000"]]]]]]]]]], "updater.core/updater" ["defn" "updater" ["store" "op" "op-data"] ["case" "op" [":add-task" ["update" "store" ":tasks" ["fn" ["tasks"] ["let" [["id" ["js/Date.now"]]] ["assoc" "tasks" "id" ["{}" [":id" "id"] [":text" "op-data"] [":done?" "false"]]]]]]] [":delete-task" ["update" "store" ":tasks" ["fn" ["tasks"] ["dissoc" "tasks" "op-data"]]]] [":toggle-task" ["update" "store" ":tasks" ["fn" ["tasks"] ["update-in" "tasks" ["[]" "op-data" ":done?"] "not"]]]] [":edit-task" ["update" "store" ":tasks" ["fn" ["tasks"] ["assoc-in" "tasks" ["[]" ["first" "op-data"] ":text"] ["last" "op-data"]]]]] "store"]], "main/render-app!" ["defn" "render-app!" [] ["let" [["target" [".querySelector" "js/document" "|#app"]]] ["render!" ["comp-container" "@store-ref"] "target" "dispatch!" "states-ref"]]], "dsl.object3d-dom/create-perspective-camera" ["defn" "create-perspective-camera" ["params"] ["let" [["fov" [":fov" "params"]] ["aspect" [":aspect" "params"]] ["near" [":near" "params"]] ["far" [":far" "params"]] ["object3d" ["js/THREE.PerspectiveCamera." "fov" "aspect" "near" "far"]]] [".set" "object3d.position" [":x" "params"] [":y" "params"] [":z" "params"]] ["reset!" "camera-ref" "object3d"] "object3d"]], "dsl.object3d-dom/build-tree" ["defn" "build-tree" ["coord" "tree"] ["let" [["object3d" ["create-element" ["dissoc" "tree" ":children"]]] ["children" ["->>" [":children" "tree"] ["map" ["fn" ["entry"] ["update" "entry" "1" ["fn" ["child"] ["build-tree" ["conj" "coord" ["first" "entry"]] "child"]]]]] ["into" ["{}"]]]] ["virtual-element" ["{}" [":object3d" "object3d"] [":children" "children"]]]] ["doseq" ["[]" "entry" "children"] ["let" [["child" ["last" "entry"]]] ["--" ".log" "js/console" "|Child:" "child" "entry"] [".addBy" "object3d" ["first" "entry"] "child"]]] ["swap!" "virtual-tree-ref" "assoc-in" ["conj" "coord" "'data"] "virtual-element"] "object3d"]], "dsl.object3d-dom/create-text-element" ["defn" "create-text-element" ["params" "material"] ["let" [["geometry" ["js/THREE.TextGeometry." ["or" [":text" "params"] "|Quatrefoil"] ["clj->js" ["assoc" "params" ":font" "@font-ref"]]]] ["object3d" ["js/THREE.Mesh." "geometry" ["create-material" "material"]]]] [".set" "object3d.position" [":x" "params"] [":y" "params"] [":z" "params"]] "object3d"]], "dsl.diff/diff-params" ["defn" "diff-params" ["prev-params" "params" "coord" "collect!"] ["let" [["prev-keys" ["into" ["#{}"] ["keys" "prev-params"]]] ["curr-keys" ["into" ["#{}"] ["keys" "params"]]] ["added-params" ["set/difference" "curr-keys" "prev-keys"]] ["removed-params" ["into" ["#{}"] ["set/difference" "prev-keys" "curr-keys"]]] ["common-keys" ["set/intersection" "prev-keys" "curr-keys"]] ["changed-params" ["->>" "common-keys" ["filter" ["fn" ["k"] ["not=" ["get" "prev-params" "k"] ["get" "params" "k"]]]] ["map" ["fn" ["k"] ["[]" "k" ["get" "params" "k"]]]] ["into" ["{}"]]]]] ["if" ["not" ["empty?" "removed-params"]] ["collect!" ["[]" "coord" ":remove-params" "removed-params"]]] ["if" ["not" ["empty?" "added-params"]] ["collect!" ["[]" "coord" ":add-params" ["select-keys" "params" "added-params"]]]] ["if" ["not" ["empty?" "changed-params"]] ["collect!" ["[]" "coord" ":update-params" "changed-params"]]]]], "dsl.alias/perspective-camera" ["defn" "perspective-camera" ["props" "&" "children"] ["create-element" ":perspective-camera" "props" "children"]], "dsl.object3d-dom/create-sphere-element" ["defn" "create-sphere-element" ["params" "material" "event" "comp-coord"] ["let" [["geometry" ["js/THREE.SphereGeometry." ["or" [":radius" "params"] "8"] ["or" [":width-segments" "params"] "32"] ["or" [":height-segments" "params"] "32"]]] ["object3d" ["js/THREE.Mesh." "geometry" ["create-material" "material"]]]] [".set" "object3d.position" [":x" "params"] [":y" "params"] [":z" "params"]] ["set!" "object3d.coord" "comp-coord"] [".log" "js/console" "|Sphere:" "object3d"] "object3d"]], "dsl.alias/create-comp" ["defn" "create-comp" ["comp-name" "hooks" "render"] ["fn" ["&" "args"] ["Component." "comp-name" "args" ["{}"] ["{}"] "render" "nil" ["merge" "basic-hooks" "hooks"] "false"]]], "dsl.alias/text" ["defn" "text" ["props" "&" "children"] ["create-element" ":text" "props" "children"]], "dsl.alias/create-element" ["defn" "create-element" ["el-name" "props" "children"] ["Shape." "el-name" [":params" "props"] [":material" "props"] [":event" "props"] ["arrange-children" "children"] "nil"]], "dsl.object3d-dom/virtual-tree-ref" ["defonce" "virtual-tree-ref" ["atom" ["{}"]]], "comp.canvas/comp-demo" ["def" "comp-demo" ["create-comp" ":demo" ["{}" [":init-state" ["fn" ["&" "args"] "0"]] [":update-state" ["fn" ["state" "x"] ["inc" "state"]]]] ["fn" [] ["fn" ["state" "mutate!" "instant"] ["group" ["{}"] ["box" ["{}" [":params" ["{}" [":width" "16"] [":height" "4"] [":depth" "6"]]] [":material" ["{}" [":kind" ":mesh-lambert"] [":color" "0x808080"] [":opacity" "0.6"]]] [":event" ["{}" [":click" ["fn" ["event" "dispatch!"] [".log" "js/console" "|Click:" "event"] ["dispatch!" ":demo" "nil"] ["mutate!" "|Mutate demo"]]]]]]] ["sphere" ["{}" [":params" ["{}" [":radius" "4"] [":x" "40"]]] [":material" ["{}" [":kind" ":mesh-lambert"] [":opacity" "0.6"] [":color" "0x9050c0"]]] [":event" ["{}" [":click" ["fn" ["event" "dispatch!"] [".log" "js/console" "|Click:" "event"] ["dispatch!" ":canvas" "nil"]]]]]]] ["group" ["{}"] ["text" ["{}" [":params" ["{}" [":text" "|Quatrefoil"] [":size" "4"] [":height" "2"] [":z" "40"]]] [":material" ["{}" [":kind" ":mesh-lambert"] [":color" "0xffcccc"]]]]]]]]]]], "dsl.object3d-dom/set-event" ["defn" "set-event" []], "util.core/purify-tree" ["defn" "purify-tree" ["tree"] ["if" ["comp?" "tree"] ["recur" [":tree" "tree"]] ["update" "tree" ":children" ["fn" ["children"] ["->>" "children" ["map" ["fn" ["entry"] ["update" "entry" "1" ["fn" ["child"] ["purify-tree" "child"]]]]] ["into" ["{}"]]]]]]], "comp.todolist/comp-todolist" ["def" "comp-todolist" ["create-comp" ":todolist" ["{}"] ["fn" ["tasks"] ["fn" ["state" "mutate!" "instant"] ["group" ["{}"] ["group" ["{}" [":params" ["{}" [":y" "40"] [":x" "0"] [":z" "0"]]]] ["box" ["{}" [":params" ["{}" [":width" "32"] [":height" "4"] [":depth" "1"] [":opacity" "0.5"]]] [":material" ["{}" [":kind" ":mesh-lambert"] [":color" "0xcccccc"]]] [":event" ["{}" [":click" ["fn" ["event" "dispatch!"] ["dispatch!" ":add-task" ["js/prompt" "|Task content?"]]]]]]]] ["sphere" ["{}" [":params" ["{}" [":radius" "4"] [":x" "40"]]] [":material" ["{}" [":kind" ":mesh-lambert"] [":opacity" "0.3"] [":color" "0x9050ff"]]] [":event" ["{}"]]]]] ["group" ["{}" [":params" ["{}" [":y" "30"] [":x" "0"] [":z" "0"]]]] ["->>" ["vals" "tasks"] ["map-indexed" ["fn" ["idx" "task"] ["[]" [":id" "task"] ["comp-task" "task" "idx"]]]] ["into" ["{}"]]]]]]]]], "comp.todolist/comp-task" ["def" "comp-task" ["create-comp" ":task" ["{}"] ["fn" ["task" "idx"] ["fn" ["state" "mutate" "instant"] ["group" ["{}" [":params" ["{}" [":x" "0"] [":y" ["*" "idx" "-4"]]]]] ["sphere" ["{}" [":params" ["{}" [":radius" "2"] [":x" "-20"]]] [":material" ["{}" [":kind" ":mesh-lambert"] [":opacity" "0.3"] [":color" ["if" [":done?" "task"] "0x905055" "0x9050ff"]]]] [":event" ["{}" [":click" ["fn" ["event" "dispatch!"] ["dispatch!" ":toggle-task" [":id" "task"]]]]]]]] ["box" ["{}" [":params" ["{}" [":width" "32"] [":height" "4"] [":depth" "1"] [":opacity" "0.5"]]] [":material" ["{}" [":kind" ":mesh-lambert"] [":color" "0xcccccc"]]] [":event" ["{}" [":click" ["fn" ["event" "dispatch!"] ["dispatch!" ":edit-task" ["js/prompt" "|New task:" [":text" "task"]]]]]]]] ["text" ["{}" [":params" ["{}" [":text" [":text" "task"]] [":size" "3"] [":height" "2"]]] [":material" ["{}" [":kind" ":mesh-lambert"] [":color" "0xffcccc"]]]]]] ["sphere" ["{}" [":params" ["{}" [":radius" "2"] [":x" "30"]]] [":material" ["{}" [":kind" ":mesh-lambert"] [":opacity" "0.3"] [":color" "0xff5050"]]] [":event" ["{}" [":click" ["fn" ["event" "dispatch!"] ["dispatch!" ":delete-task" [":id" "task"]]]]]]]]]]]]], "dsl.object3d-dom/remove-child" ["defn" "remove-child" []], "util.core/=seq?" ["defn" "=seq?" ["xs" "ys"] ["let" [["xs-empty?" ["empty?" "xs"]] ["ys-empty?" ["empty?" "ys"]]] ["if" "xs-empty?" "ys-empty?" ["if" "ys-empty?" "false" ["if" ["identical?" ["first" "xs"] ["first" "ys"]] ["recur" ["rest" "xs"] ["rest" "ys"]] "false"]]]]], "dsl.object3d-dom/create-element" ["defn" "create-element" ["element"] ["--" ".log" "js/console" "|Element:" "element" [":coord" "element"]] ["let" [["params" ["or" [":params" "element"] ["{}"]]] ["material" ["or" [":material" "element"] ["{}" [":kind" ":mesh-basic"] [":color" "0xa0a0a0"]]]] ["event" [":event" "element"]] ["coord" [":coord" "element"]]] ["case" [":name" "element"] [":scene" "global-scene"] [":group" ["create-group-element" "params"]] [":box" ["create-box-element" "params" "material" "event" "coord"]] [":sphere" ["create-sphere-element" "params" "material" "event" "coord"]] [":point-light" ["create-point-light" "params"]] [":perspective-camera" ["create-perspective-camera" "params"]] [":text" ["create-text-element" "params" "material"]] ["do" [".warn" "js/console" "|Unknown element" "element"] ["js/THREE.Object3D."]]]]], "dsl.object3d-dom/global-scene" ["defonce" "global-scene" ["js/THREE.Scene."]], "main/ssr-stages" ["def" "ssr-stages" ["let" [["ssr-element" [".querySelector" "js/document" "|#ssr-stages"]] ["ssr-markup" [".getAttribute" "ssr-element" "|content"]]] ["read-string" "ssr-markup"]]], "main/render-canvas-app!" ["defn" "render-canvas-app!" [] [".log" "js/console" "|Rerender" "@store-ref" "@states-ref"] ["render-canvas!" ["comp-canvas" "@store-ref"] "states-ref" "@instants-ref" "global-scene"] [".render" "@renderer-ref" "global-scene" "@camera-ref"]], "comp.container/comp-container" ["def" "comp-container" ["create-comp" ":container" ["fn" ["store"] ["fn" ["state" "mutate!"] ["div" ["{}" [":style" ["merge" "ui/global"]]] ["canvas" ["{}" [":attrs" ["{}" [":id" "|canvas"] [":width" "js/window.innerWidth"] [":height" "js/window.innerHeight"]]] [":style" ["{}"]]]]]]]]], "dsl.diff/diff-children" ["defn" "diff-children" ["prev-children" "children" "coord" "collect!"] ["let" [["prev-keys" ["into" ["#{}"] ["keys" "prev-children"]]] ["curr-keys" ["into" ["#{}"] ["keys" "children"]]] ["removed-keys" ["set/difference" "prev-keys" "curr-keys"]] ["added-children" ["->>" ["set/difference" "curr-keys" "prev-keys"] ["map" ["fn" ["k"] ["[]" "k" ["get" "children" "k"]]]]]] ["common-keys" ["set/intersection" "prev-keys" "curr-keys"]]] ["if" ["not" ["empty?" "removed-keys"]] ["collect!" ["[]" "coord" ":remove-children" "removed-keys"]]] ["if" ["not" ["empty?" "added-children"]] ["collect!" ["[]" "coord" ":add-children" "added-children"]]] ["--" ".log" "js/console" "|Common keys to diff:" "common-keys" "prev-children" "children"] ["doall" ["doseq" ["[]" "k" "common-keys"] ["--" ".log" "js/console" "|Diffing children:" "coord" "common-keys"] ["let" [["prev-child" ["get" "prev-children" "k"]] ["child" ["get" "children" "k"]]] ["if" ["not" ["identical?" "prev-child" "child"]] ["diff-tree" "prev-child" "child" ["conj" "coord" "k"] "collect!"]]]]]]], "dsl.object3d-dom/set-material" ["defn" "set-material" []], "main/store-ref" ["defonce" "store-ref" ["atom" ["{}" [":tasks" ["{}" ["100" ["{}" [":id" "100"] [":text" "|Initial task"] [":done?" "false"]]]]]]]], "types/Component" ["defrecord" "Component" ["name" "args" "states" "instants" "render" "tree" "hooks" "removing?"]], "dsl.object3d-dom/on-canvas-click" ["defn" "on-canvas-click" ["event" "dispatch!" "tree-ref"] ["let" [["mouse" ["js/THREE.Vector2."]] ["raycaster" ["js/THREE.Raycaster."]]] ["set!" "mouse.x" ["dec" ["*" "2" ["/" "event.clientX" "js/window.innerWidth"]]]] ["set!" "mouse.y" ["-" "1" ["*" "2" ["/" "event.clientY" "js/window.innerHeight"]]]] [".setFromCamera" "raycaster" "mouse" "@camera-ref"] ["let" [["intersects" [".intersectObjects" "raycaster" ["let" [["children" ["clj->js" ["[]"]]] ["collect!" ["fn" ["x"] [".push" "children" "x"]]]] ["collect-children" "global-scene" "collect!"] "children"]]] ["maybe-target" ["aget" "intersects" "0"]]] [".log" "js/console" "intersects"] ["if" ["some?" "maybe-target"] ["let" [["coord" "maybe-target.object.coord"] ["target-el" ["find-element" "@tree-ref" "coord"]] ["maybe-handler" [":click" [":event" "target-el"]]]] ["if" ["some?" "maybe-handler"] ["maybe-handler" "event" "dispatch!"] ["println" "|Found no handler for" "coord"]]]]]]], "dsl.render/render-markup" ["defn" "render-markup" ["markup" "prev-markup" "coord" "comp-coord" "states" "build-mutate" "instants"] ["if" ["comp?" "markup"] ["render-component" "markup" "prev-markup" "coord" ["get" "states" [":name" "markup"]] "build-mutate" "instants"] ["render-shape" "markup" "prev-markup" "coord" "comp-coord" "states" "build-mutate" "instants"]]], "dsl.alias/arrange-children" ["defn" "arrange-children" ["children"] ["let" [["cursor" ["first" "children"]] ["result" ["if" ["and" ["=" "1" ["count" "children"]] ["not" ["or" ["comp?" "cursor"] ["shape?" "cursor"]]]] ["->>" "cursor" ["filter" ["fn" ["entry"] ["some?" ["last" "entry"]]]] ["into" ["{}"]]] ["->>" "children" ["filter" "some?"] ["map-indexed" "vector"] ["into" ["{}"]]]]]] ["--" ".log" "js/console" "|Handle children:" "children" "result"] "result"]], "util.core/comp?" ["defn" "comp?" ["x"] ["=" "Component" ["type" "x"]]], "dsl.alias/box" ["defn" "box" ["props" "&" "children"] ["create-element" ":box" "props" "children"]], "dsl.object3d-dom/create-material" ["defn" "create-material" ["material"] ["case" [":kind" "material"] [":line-basic" ["js/THREE.LineBasicMaterial." ["clj->js" ["dissoc" "material" ":kind"]]]] [":mesh-basic" ["js/THREE.MeshBasicMaterial." ["clj->js" ["dissoc" "material" ":kind"]]]] [":mesh-lambert" ["js/THREE.MeshLambertMaterial." ["clj->js" ["dissoc" "material" ":kind"]]]] ["do" [".warn" "js/console" "|Unknown material:" "material"] ["js/THREE.LineBasicMaterial." ["clj->js" ["dissoc" "material" ":kind"]]]]]], "util.core/find-element" ["defn" "find-element" ["tree" "comp-coord"] ["--" ".log" "js/console" "|Find..." "tree" "comp-coord"] ["if" ["empty?" "comp-coord"] "tree" ["let" [["cursor" ["first" "comp-coord"]]] ["if" ["comp?" "tree"] ["if" ["=" "cursor" [":name" "tree"]] ["recur" [":tree" "tree"] ["rest" "comp-coord"]] "nil"] ["if" ["contains?" [":children" "tree"] "cursor"] ["recur" ["get-in" "tree" ["[]" ":children" "cursor"]] ["rest" "comp-coord"]] "nil"]]]]], "types/Shape" ["defrecord" "Shape" ["name" "params" "material" "event" "children" "coord"]], "dsl.diff/diff-events" ["defn" "diff-events" ["prev-events" "events" "coord" "collect!"] ["let" [["prev-event-names" ["into" ["#{}"] ["keys" "prev-events"]]] ["event-names" ["into" ["#{}"] ["keys" "events"]]] ["added-events" ["set/difference" "event-names" "prev-event-names"]] ["removed-events" ["set/difference" "prev-event-names" "event-names"]]] ["if" ["not" ["empty?" "added-events"]] ["collect!" ["[]" "coord" ":add-events" "added-events"]]] ["if" ["not" ["empty?" "removed-events"]] ["collect!" ["[]" "coord" ":remove-events" "removed-events"]]]]], "dsl.object3d-dom/create-group-element" ["defn" "create-group-element" ["params"] ["let" [["object3d" ["js/THREE.Group."]]] [".set" "object3d.position" [":x" "params"] [":y" "params"] [":z" "params"]] "object3d"]], "dsl.object3d-dom/append-child" ["defn" "append-child" []], "dsl.diff/diff-material" ["defn" "diff-material" ["prev-material" "material" "coord" "collect!"] ["if" ["not=" [":kind" "prev-material"] [":kind" "material"]] ["collect!" ["[]" "coord" ":replace-material" "material"]] ["let" [["prev-keys" ["into" ["#{}"] ["keys" "prev-material"]]] ["curr-keys" ["into" ["#{}"] ["keys" "material"]]] ["added-material" ["->>" ["set/difference" "curr-keys" "prev-keys"] ["map" ["fn" ["k"] ["[]" "k" ["get" "material" "k"]]]]]] ["removed-keys" ["->>" ["set/difference" "prev-keys" "curr-keys"] ["into" ["#{}"]]]] ["updated-material" ["->>" ["set/intersection" "prev-keys" "curr-keys"] ["filter" ["fn" ["k"] ["not=" ["get" "prev-material" "k"] ["get" "material" "k"]]]] ["map" ["fn" ["k"] ["[]" "k" ["get" "material" "k"]]]] ["into" ["{}"]]]]] ["if" ["not" ["empty?" "added-material"]] ["collect!" ["[]" "coord" ":add-material" "added-material"]]] ["if" ["not" ["empty?" "removed-keys"]] ["collect!" ["[]" "coord" ":remove-material" "removed-keys"]]] ["if" ["not" ["empty?" "updated-material"]] ["collect!" ["[]" "coord" ":update-material" "updated-material"]]]]]], "main/states-ref" ["defonce" "states-ref" ["atom" ["{}"]]], "dsl.alias/line" ["defn" "line" ["props" "&" "children"] ["create-element" ":line" "props" "children"]], "dsl.object3d-dom/font-ref" ["defonce" "font-ref" ["do" ["let" [["loader" ["THREE.FontLoader."]]] [".load" "loader" "|hind.json" ["fn" ["response"] [".log" "js/console" "response"] ["reset!" "font-ref" "response"]]]] ["atom" ["js/THREE.Font." "nil"]]]], "main/renderer-ref" ["defonce" "renderer-ref" ["atom" "nil"]], "main/instants-ref" ["defonce" "instants-ref" ["atom" ["{}"]]], "util.core/shape?" ["defn" "shape?" ["x"] ["=" "Shape" ["type" "x"]]], "dsl.object3d-dom/create-box-element" ["defn" "create-box-element" ["params" "material" "event" "comp-coord"] ["let" [["geometry" ["js/THREE.BoxGeometry." [":width" "params"] [":height" "params"] [":depth" "params"]]] ["object3d" ["js/THREE.Mesh." "geometry" ["create-material" "material"]]]] [".set" "object3d.position" [":x" "params"] [":y" [":y" "params"]] [":z" [":z" "params"]]] ["set!" "object3d.coord" "comp-coord"] "object3d"]], "dsl.alias/camera" ["defn" "camera" ["props" "&" "children"] ["create-element" ":camera" "props" "children"]], "core/tree-ref" ["defonce" "tree-ref" ["atom" "nil"]], "util.core/collect-children" ["defn" "collect-children" ["element" "collect!"] [".forEach" "element.children" ["fn" ["child"] ["--" ".log" "js/console" "|Child:" "child"] ["collect!" "child"] ["if" ["some?" "child.children"] ["collect-children" "child" "collect!"]]]]], "dsl.alias/scene" ["defn" "scene" ["props" "&" "children"] ["create-element" ":scene" "props" "children"]], "dsl.diff/diff-tree" ["defn" "diff-tree" ["prev-tree" "tree" "coord" "collect!"] ["--" ".log" "js/console" "|Diffing:" "coord" ["some?" "prev-tree"] ["some?" "tree"]] ["cond" [["comp?" "prev-tree"] ["recur" [":tree" "prev-tree"] "tree" "coord" "collect!"]] [["comp?" "tree"] ["recur" "prev-tree" [":tree" "tree"] "coord" "collect!"]] [":else" ["if" ["some?" "prev-tree"] ["if" ["some?" "tree"] ["if" ["not=" [":name" "prev-tree"] [":name" "tree"]] ["collect!" ["[]" "coord" ":replace-element" ["purify-tree" "tree"]]] ["do" ["diff-params" [":params" "prev-tree"] [":params" "tree"] "coord" "collect!"] ["diff-material" [":material" "prev-tree"] [":material" "tree"] "coord" "collect!"] ["diff-events" [":event" "prev-tree"] [":event" "tree"] "coord" "collect!"] ["diff-children" [":children" "prev-tree"] [":children" "tree"] "coord" "collect!"]]] ["collect!" ["[]" "coord" ":remove-element"]]] ["if" ["some?" "tree"] ["collect!" ["[]" "coord" ":add-element" "tree"]] "nil"]]]]], "dsl.object3d-dom/create-point-light" ["defn" "create-point-light" ["params"] ["let" [["color" [":color" "params"]] ["intensity" [":intensity" "params"]] ["distance" [":distance" "params"]] ["object3d" ["js/THREE.PointLight." "color" "intensity" "distance"]]] [".set" "object3d.position" [":x" "params"] [":y" "params"] [":z" "params"]] [".log" "js/console" "|Light:" "object3d"] "object3d"]], "dsl.object3d-dom/set-param" ["defn" "set-param" []], "dsl.alias/basic-hooks" ["def" "basic-hooks" ["{}" [":init-state" ["fn" ["&" "args"] ["{}"]]] [":init-instant" ["fn" ["&" "args"] ["{}"]]] [":on-mutate" "merge"] [":on-update" "merge"] [":on-tick" ["fn" []]] [":on-update" ["fn" []]] [":on-unmount" ["fn" []]] [":remove?" ["fn" [] "false"]]]]}, :namespaces {"dsl.diff" ["ns" "quatrefoil.dsl.diff" [":require" ["[]" "clojure.set" ":as" "set"] ["[]" "quatrefoil.util.core" ":refer" ["[]" "comp?" "shape?" "purify-tree"]]]], "comp.canvas" ["ns" "quatrefoil.comp.canvas" [":require" ["[]" "quatrefoil.dsl.alias" ":refer" ["[]" "create-comp" "group" "box" "sphere" "point-light" "perspective-camera" "scene" "text"]] ["[]" "quatrefoil.comp.todolist" ":refer" ["[]" "comp-todolist"]]]], "util.core" ["ns" "quatrefoil.util.core" [":require" ["[]" "quatrefoil.types" ":refer" ["[]" "Component" "Shape"]]]], "comp.container" ["ns" "quatrefoil.comp.container" [":require" ["[]" "hsl.core" ":refer" ["[]" "hsl"]] ["[]" "respo-ui.style" ":as" "ui"] ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span" "canvas"]] ["[]" "respo.comp.space" ":refer" ["[]" "comp-space"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]]]], "types" ["ns" "quatrefoil.types"], "comp.todolist" ["ns" "quatrefoil.comp.todolist" [":require" ["[]" "quatrefoil.dsl.alias" ":refer" ["[]" "create-comp" "group" "box" "sphere" "point-light" "perspective-camera" "scene" "text"]]]], "main" ["ns" "quatrefoil.main" [":require" ["[]" "respo.core" ":refer" ["[]" "render!" "clear-cache!" "falsify-stage!" "render-element" "gc-states!"]] ["[]" "quatrefoil.comp.container" ":refer" ["[]" "comp-container"]] ["[]" "cljs.reader" ":refer" ["[]" "read-string"]] ["[]" "quatrefoil.core" ":refer" ["[]" "render-canvas!" "tree-ref"]] ["[]" "quatrefoil.comp.canvas" ":refer" ["[]" "comp-canvas"]] ["[]" "devtools.core" ":as" "devtools"] ["[]" "quatrefoil.dsl.object3d-dom" ":refer" ["[]" "camera-ref" "global-scene" "on-canvas-click"]] ["[]" "quatrefoil.updater.core" ":refer" ["[]" "updater"]]]], "dsl.object3d-dom" ["ns" "quatrefoil.dsl.object3d-dom" [":require" ["[]" "quatrefoil.util.core" ":refer" ["[]" "purify-tree" "collect-children" "find-element"]]]], "updater.core" ["ns" "quatrefoil.updater.core"], "core" ["ns" "quatrefoil.core" [":require" ["[]" "quatrefoil.dsl.render" ":refer" ["[]" "render-component"]] ["[]" "quatrefoil.dsl.diff" ":refer" ["[]" "diff-tree"]] ["[]" "quatrefoil.dsl.object3d-dom" ":refer" ["[]" "build-tree"]] ["[]" "quatrefoil.util.core" ":refer" ["[]" "purify-tree"]]]], "dsl.alias" ["ns" "quatrefoil.dsl.alias" [":require" ["[]" "quatrefoil.types" ":refer" ["[]" "Shape" "Component"]] ["[]" "quatrefoil.util.core" ":refer" ["[]" "comp?" "shape?"]]]], "dsl.render" ["ns" "quatrefoil.dsl.render" [":require" ["[]" "quatrefoil.util.core" ":refer" ["[]" "comp?" "shape?" "=seq?"]]]]}, :procedures {"dsl.diff" [], "dsl" [], "comp.canvas" [], "util.core" [], "types" [], "comp.todolist" [], "main" [["set!" [".-onload" "js/window"] "-main!"]], "util.overwrite" [], "render.object3d-dom" [], "updater.core" [], "alias" [], "core" [], "dsl.alias" [], "dsl.render" []}, :package "quatrefoil"}